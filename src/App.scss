// ----------------------------------------------------------------
// APP STYLES
// General common styles
// ----------------------------------------------------------------


// Tokens and mixins import
@import './_theme.scss';
@import './_mixins.scss';


// Layout styles
html,
body {
  height: 100%;
  min-height: 100%;
  min-width: 100%;
}

body {
  @include text-preset-9()
  color: $color-text-primary-on-light;
  padding: 0;
  margin: 0;
}

#root {
  height: 100%;
  min-height: 100%;
}

// Text styles reset
h1, h2, h3, h4, h5, h6, p, ul, li {
  font-style: normal;
  font-weight: normal;
  text-align: left;
  margin: 0;
  padding: 0;
}


// Text styles
h1 {
  @include text-preset-2()
}

h2 {
  @include text-preset-3()
}

h3 {
  @include text-preset-4()
}

h4 {
  @include text-preset-5()
}

h5 {
  @include text-preset-6()
}

h6 {
  @include text-preset-7()
}

p {
  @include text-preset-9()

  a {
    &:hover {
    }
  }
}

.headline {
  @include text-preset-1()
}

.eyebrow {
  @include text-preset-11()
}

a {
  text-decoration: none;
}


// Pages
.PageList {
  background-color: $color-background-light-secondary;
  height: 100%;
  min-height: 100%;
}

.PageSingle {
  background-color: $color-background-light-primary;
  height: 100%;
  min-height: 100%;
}


//FiltersList
.FiltersList {
  display: flex;
  justify-content: flex-start;
  margin: 24px auto 32px;
  max-width: $breakpoint-xxl;
}


//FiltersListItem
.FiltersListItem {
  $filterColor: $color-brand-secondary;
  font-family: $font-title;
  font-size: 14px;
  font-weight: $font-weight-semibold;
  line-height: 14px;
  letter-spacing: 0.1px;
  text-transform: uppercase;
  padding: $spacing-xs $spacing-md;
  margin: 0 $spacing-xs $spacing-xs 0;
  display: inline-block;
  cursor: pointer;
  transition: all $transition-slow cubic-bezier(.25,.8,.25,1);
  white-space: nowrap;
  border: 2px $color-text-tertiary-on-light solid;
  color: $color-text-tertiary-on-light;
  background-color: transparentize($color-text-tertiary-on-light, 0.9);
  border-radius: 30px;

  &:hover {
    color: $color-text-secondary-on-light;
    border-color: $color-text-secondary-on-light;
  }

  &__Active {
    color: darken($filterColor, 15%);
    border-color: darken($filterColor, 15%);
    background-color: transparentize(darken($filterColor, 15%), 0.8);
    pointer-events: none;
  }

  &--Clear {
    color: $color-support-error-area;
    border-color: $color-support-error-area;
    background-color: $color-support-error-background;

    &__Hidden {
      display: none;
    }

    &:hover {
      color: darken($color-support-error-area, 10%);
      border-color: darken($color-support-error-area, 10%);
    }
  }
}


// Grid
.Layout {
  display: grid;
  justify-content: flex-start;
  margin: 0 auto;
  max-width: $breakpoint-xxl;
  grid-column-gap: $layout-sm;
  grid-row-gap: $layout-md;
  padding: 0 $layout-xs;
  grid-auto-rows: auto;

  &--Col-1 {
    grid-template-columns: repeat(1, minmax(10px, 1fr))
  }

  &--Col-2 {
    grid-template-columns: repeat(2, minmax(10px, 1fr))
  }

  &--Col-3 {
    grid-template-columns: repeat(3, minmax(10px, 1fr))
  }

  &--Col-6 {
    grid-template-columns: repeat(6, minmax(10px, 1fr))
  }

  &--Col-12 {
    grid-template-columns: repeat(12, minmax(10px, 1fr))
  }

  &--Inset {
    padding: 0;
  }
}


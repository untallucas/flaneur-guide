// TODO

// Cambiar map tiles provider
// Traer categorias en SingleSpot
// Sliders en Home

f9b62b  visual
f99728  comida
ed5844  teatro
af3b1c  
d61339  en bici
cc2986  shopping
7f63d3  ferias y artesanias
673ca3  design
2c2cc6  music
206ed5  cines
1daadb  museos
27c7c6  ciencia
1cb58a  sustainable
19aa20  parks
77bc13  books
9cc929  kids
8c7a13  food trucks
664d38  arqui
444d55  religioso
000000  secretos

// STATEFUL COMPONENT
// COSAS MAS COMPLICADAS CON GESTION DE ESTADOS
class SingleSpot extends Component {
  render () {
    return (
      <div>
        <Navigation/>
        <h1>
          SingleSpot - Como clase
          <br/>
          { this.props.match.params.slug }
        </h1>
      </div>
    )
  }
}



// STATELESS COMPONENT - COMO FUNCIÓN
// COSAS SIMPLES QUE NO CAMBIAN DE ESTADO
function SingleSpot( props ) {
  return (
    <div>
      <Navigation/>
      <h1>
        SingleSpot - Como función
        <br/>
        { props.match.params.slug }
      </h1>
    </div>
  )
}

// MAS SIMPLE DE SOLO RENDER SIN FUNCIONES ADENTRO
const SingleSpot = props => (
  <div>
    <Navigation/>
    <h1>
      SingleSpot - Como función
      <br/>
      { props.match.params.slug }
    </h1>
  </div>
)

const SingleSpot = ({ isLoading, isError }) => (
  <div>
    <Navigation/>
    <h1>
      SingleSpot - Como función
      <br/>
      { isLoading }
    </h1>
  </div>
)

const SingleSpot = function ({ match }) {
  return (
    <div>
      <Navigation/>
      <h1>
        SingleSpot - Como variable
        <br/>
        { match.params.slug }
      </h1>
    </div>
  )
}




/*
  Solo lugares
  Home > Ciudad. Descripcion + Listados automáticos
  Spot > Lugar. Descripción + Fotos + Mapa

  List > Todos los elementos. Filtrar + Visualizar + Ordenar
       > Categoría
       > Taxonomía
       > Filtro
       > Etc.


  Backend. De donde tomo datos? Gatsby? WP derecho? Notion?

  Lista + Grilla + Mapa
  Ir + Comer + Recorrer

  -----

  CARD
  Image
  Title (H3)
  Hood
  ExtraInfo (Duración, Lugar, Tipo, etc.)

  H1
  H2

  Paragraph
  Link
  FilterButtons
  TagButtons
  Image
  Map

  CategoryHeader

  -----




A DONDE IR
cordoba/lugares                         ListSpots
cordoba/lugares/museo-evita             SingleSpot
cordoba/lugares/:slug
cordoba/lugares/categoria/parques       ListSpots :filter
cordoba/lugares/:taxonomy/:filter

DONDE COMER
cordoba/restaurantes                    ListSpots
cordoba/restaurantes/bruncheria         SingleSpot
cordoba/restaurantes/:slug
cordoba/restaurantes/categoria/china    ListSpots :filter
cordoba/restaurantes/:taxonomy/:filter

QUE HACER
cordoba/eventos                         ListEvents
cordoba/eventos/griego-rock             SingleEvent
cordoba/eventos/:slug
cordoba/eventos/categoria/recital       ListEvents :filter
cordoba/eventos/:taxonomy/:filter

RECORRER
cordoba/recorridos                      ListTracks
cordoba/recorridos/guemes-mon-amour     SingleTrack
cordoba/recorridos/:slug
cordoba/recorridos/categoria/diseño    ListTracks :filter
cordoba/recorridos/:taxonomy/:filter

cordoba/inicio                          City
cordoba/

cordoba/acerca                          PageAbout


cordoba/lugares/autor/tamburini         ListSpots :filter
cordoba/lugares/autor/:filter

cordoba/lugares/año/1965                ListSpots :filter
cordoba/lugares/año/:filter
*/















import React from 'react'
import ItemsGrid from '../../components/ItemsGrid/ItemsGrid'
import Header from '../../components/Header/Header'

import './List.scss'

import DataItems from '../../data/DataItems.js'
import DataTaxonomies from '../../data/DataTaxonomies.js'

const DataCategories = DataTaxonomies.categories

class List extends React.Component {
  constructor (props) {
    super(props)
    this.triggerFilter = this.triggerFilter.bind(this)

    let initialUrl = props.match.url
    let initialItems = DataItems
    let initialTaxonomyName = 'Todos'
    let initialTaxonomySlug = 'todos'
    let initialTaxonomy = props.match.params.filter

    let initialTaxonomyElements = DataCategories.filter(function (taxonomy) {
      return taxonomy.slug === initialTaxonomy
    })

    if (initialTaxonomyElements[0]) {
      initialTaxonomyName = initialTaxonomyElements[0]['title']
      initialTaxonomySlug = initialTaxonomyElements[0]['slug']
      initialItems = DataItems.filter(function (item) {
        return item.categories.includes(initialTaxonomyElements[0]['id'])
      })
    } else {
      initialUrl = '/list'
    }

    this.state = {
      activeTaxonomy: initialTaxonomyName,
      activeTaxonomySlug: initialTaxonomySlug,
      itemsList: initialItems
    }
    this.props.history.replace(initialUrl)
  }

  triggerFilter (updatedSlug, updatedTaxonomyName, updatedTaxonomyId) {
    const updatedList = DataItems.filter(function (item) {
      if (updatedTaxonomyId) {
        return item.categories.includes(updatedTaxonomyId)
      } else {
        return item.categories
      }
    })
    this.setState({
      activeTaxonomy: updatedTaxonomyName,
      activeTaxonomySlug: updatedSlug,
      itemsList: updatedList
    })
    this.props.history.replace('/category/' + updatedSlug)
  }

  render () {
    return (
      <div className='list'>
        <Header />
        <h2>{this.state.activeTaxonomy}</h2>
        <div className='filterlist'>
          <div onClick={(e) => this.triggerFilter('todos', 'Todos', 0, e)} className={this.state.activeTaxonomySlug === 'todos' ? 'filteritem active' : 'filteritem'}>Todos</div>
          {
            DataCategories.map(function (item, i) {
              return (
                <div onClick={(e) => this.triggerFilter(item.slug, item.title, item.id, e)} key={i} className={this.state.activeTaxonomySlug === item.slug ? 'filteritem active' : 'filteritem'}>{item.title}</div>
              )
            }, this)
          }
        </div>
        <ItemsGrid items={this.state.itemsList} />
      </div>
    )
  }
}

export default List








          <li><NavLink to='/lugares/categoria/museos' activeClassName="selected">Lugares filtrados por categoria</NavLink></li>
          <li><NavLink to='/lugares/tag/modernos' activeClassName="selected">Lugares filtrados por tag</NavLink></li>
          <li><NavLink to='/lugares/autor/tamburini' activeClassName="selected">Lugares filtrados por autor</NavLink></li>
          <li><NavLink to='/lugares/anio/1975' activeClassName="selected">Lugares filtrados por año</NavLink></li>

          <li><NavLink to='/restaurantes' activeClassName="selected">Restos</NavLink></li>
          <li><NavLink to='/restaurantes/francis' activeClassName="selected">1 Resto</NavLink></li>
          <li><NavLink to='/restaurantes/tipo/bares' activeClassName="selected">Restos filtrados por tag</NavLink></li>

          <li><NavLink to='/eventos' activeClassName="selected">Eventos</NavLink></li>
          <li><NavLink to='/eventos/griego-rock' activeClassName="selected">1 Evento</NavLink></li>
          <li><NavLink to='/eventos/tipo/recitales' activeClassName="selected">Eventos filtrados por tipo</NavLink></li>

          <li><NavLink to='/recorridos' activeClassName="selected">Recorridos</NavLink></li>
          <li><NavLink to='/recorridos/guemes-mon-amour' activeClassName="selected">1 Recorrido</NavLink></li>
          <li><NavLink to='/recorridos/tipo/culturales' activeClassName="selected">Recorridos filtrados por tipo</NavLink></li>
